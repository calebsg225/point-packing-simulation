var M=Object.defineProperty;var z=(m,t,e)=>t in m?M(m,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):m[t]=e;var o=(m,t,e)=>z(m,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const n of i)if(n.type==="childList")for(const c of n.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&s(c)}).observe(document,{childList:!0,subtree:!0});function e(i){const n={};return i.integrity&&(n.integrity=i.integrity),i.referrerPolicy&&(n.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?n.credentials="include":i.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(i){if(i.ep)return;i.ep=!0;const n=e(i);fetch(i.href,n)}})();class B{constructor(t,e,s){o(this,"x");o(this,"y");o(this,"z");o(this,"edges");this.x=t,this.y=e,this.z=s,this.edges=new Set}}const S=["#FF0000","#00FF00","#0000FF","#FFFF00","#00FFFF","#FF00FF","#820000","#008200","#000082","#828200","#008282","#820082","#7B3C00","#FF7B00","#FF7B7B","#7BFF7B","#7B7BFF","#FFFF7B","#7BFFFF","#FF7BFF","#FFBB7B"];class E{constructor(t,e){o(this,"interface");o(this,"canvas");o(this,"ctx");o(this,"centerX");o(this,"centerY");o(this,"mouseIsDown");o(this,"prevTouchX");o(this,"prevToucnY");o(this,"isInterfaceOpen");o(this,"isLoading");o(this,"edgeColorCodes");o(this,"frame");o(this,"options");o(this,"sphereRadius");o(this,"nodes");o(this,"n");o(this,"iterations");o(this,"start",t=>{this.nodes=[],this.generateRandomNodes(),t?this.gravitate(1e3,1e4):this.frame=window.requestAnimationFrame(()=>this.init(1e3,1e5,this.iterations))});o(this,"init",(t,e,s)=>{if(this.adjustForGravity(t,e),this.calcEdges(),this.render(this.iterations,s),s<0){window.cancelAnimationFrame(this.frame);return}s--,this.frame=window.requestAnimationFrame(()=>this.init(t,e,s--))});o(this,"gravitate",(t,e)=>{for(let s=0;s<this.iterations;s++)this.adjustForGravity(t,e);this.calcEdges(),this.render()});o(this,"calcEdges",()=>{const t=new Map,e=new Set;let s=1/0;for(let n=0;n<this.n;n++)for(let c=0;c<this.n;c++){if(n===c)continue;const a=[n,c].sort((d,u)=>d-u).join("-");if(e.has(a))continue;const h=this.nodes[n],r=this.nodes[c],l=+this.distanceFormula(h.x,h.y,h.z,r.x,r.y,r.z).toFixed(5);s=Math.min(s,l),t.set(a,l),e.add(a)}const i=s*Math.sqrt(1.9);for(const n of t.keys()){const[c,a]=n.split("-");t.get(n)<i?(this.nodes[+c].edges.add(n),this.nodes[+a].edges.add(n)):(this.nodes[+c].edges.delete(n),this.nodes[+a].edges.delete(n))}});o(this,"generateRandomNodes",()=>{this.nodes=[];for(let t=0;t<this.n;t++)this.nodes.push(this.generateRandomNode())});o(this,"generateRandomNode",()=>{const t=Math.random()-.5,e=Math.random()-.5,s=Math.random()-.5,{x:i,y:n,z:c}=this.projectNodeToSphere(t,e,s);return new B(i,n,c)});o(this,"adjustForGravity",(t,e)=>{for(let s=0;s<this.n;s++){let i=0,n=0,c=0;const a=this.nodes[s];for(let d=0;d<this.n;d++){if(s===d)continue;const u=this.nodes[d],f=a.x-u.x,p=a.y-u.y,F=a.z-u.z,v=Math.sqrt(f**2+p**2+F**2);if(v<e){const g=t*1/v;i+=g*f,n+=g*p,c+=g*F}}const{x:h,y:r,z:l}=this.projectNodeToSphere(a.x+i,a.y+n,a.z+c);a.x=h,a.y=r,a.z=l}});o(this,"render",(t=-1,e=-1)=>{this.clearCanvas(),t>-1&&e>-1&&(this.ctx.font=`Bold ${4*5}px Arial`,this.ctx.fillStyle="#bbbbbb",this.ctx.fillText(t-e+" / "+t,this.centerX*2-(t+""+(t-e)).length*5*2-5*6,5*4));const s=new Set,i=[],n=[],c=[],a=[],h=new Map;for(let r=0;r<this.nodes.length;r++){const l=this.nodes[r];l.z>0?c.push(l):a.push(l);for(const d of l.edges){if(s.has(d))continue;const[u,f]=d.split("-"),{x:p,y:F,z:v}=this.nodes[+u],{x:g,y:x,z:y}=this.nodes[+f],b=this.distanceFormula(p,F,v,g,x,y),k=parseFloat(b.toPrecision(4));let w;if(h.has(k))w=h.get(k);else{const C=h.size;h.set(k,C),w=C}(v+y)/2>=0?i.push([p,F,v,g,x,y,w]):n.push([p,F,v,g,x,y,w]),s.add(d)}}for(const r of a)this.drawNode(r);for(const r of n)this.drawEdge(r[0],r[1],r[2],r[3],r[4],r[5],r[6]);for(const r of i)this.drawEdge(r[0],r[1],r[2],r[3],r[4],r[5],r[6],!0);for(const r of c)this.drawNode(r,!0)});o(this,"distanceFormula",(t,e,s,i,n,c)=>Math.sqrt((i-t)**2+(n-e)**2+(c-s)**2));o(this,"projectNodeToSphere",(t,e,s)=>{const i=this.distanceFormula(t,e,s,0,0,0);return{x:t/i,y:e/i,z:s/i}});o(this,"d",(t,e,s=!1)=>{const i=this.sphereRadius;return t*(1+e*i/4e3)*i+(s?this.centerX:this.centerY)});o(this,"drawNode",(t,e=!1)=>{this.ctx.beginPath(),this.ctx.arc(this.d(t.x,t.z,!0),this.d(t.y,t.z),this.options.pointSize,0,2*Math.PI),this.ctx.fillStyle=e?this.options.pointColor:this.options.backPointColor,this.ctx.fill()});o(this,"drawEdge",(t,e,s,i,n,c,a,h=!1)=>{const r=this.d(t,s,!0),l=this.d(e,s),d=this.d(i,c,!0),u=this.d(n,c);this.ctx.beginPath(),this.ctx.moveTo(r,l),this.ctx.lineTo(d,u),this.ctx.lineWidth=this.options.edgeWidth;const f=h?"":"55";let p="#FFFFFF";a<S.length?p=S[a]:(this.edgeColorCodes.has(a)||this.edgeColorCodes.set(a,this.randomColor()),p=this.edgeColorCodes.get(a)),this.ctx.strokeStyle=p+f,this.ctx.stroke()});o(this,"randomColor",()=>{const t=[];t.push("#");for(let e=0;e<6;e++)t.push("123456789ABCDEF"[Math.floor(Math.random()*15)]);return t.join("")});o(this,"clearCanvas",()=>{this.ctx.fillStyle=this.options.clear,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)});o(this,"calculateRotatedCoordinates",(t,e,s,i,n,c,a)=>{const h=Math.sin(a*i),r=Math.cos(a*i),l=-Math.sin(a*n),d=Math.cos(a*n),u=Math.sin(a*c),f=Math.cos(a*c),p=t*f*r+e*f*h*l-e*u*d+s*f*h*d+s*u*l,F=t*u*r+e*u*h*l+e*f*d+s*u*h*d-s*f*l,v=-t*h+e*r*l+s*r*d;return{x:p,y:F,z:v}});o(this,"generateEventListeners",()=>{document.addEventListener("mouseup",()=>{this.mouseIsDown=!1}),this.canvas.addEventListener("mousedown",()=>{this.mouseIsDown=!0}),this.canvas.addEventListener("mousemove",t=>{this.mouseIsDown&&this.rotate(t.movementX,t.movementY)}),this.canvas.addEventListener("touchstart",t=>{t.preventDefault(),this.prevTouchX=t.touches[0].clientX,this.prevToucnY=t.touches[0].clientY}),this.canvas.addEventListener("touchmove",t=>{t.preventDefault();const e=t.touches[0].clientX,s=t.touches[0].clientY,i=e-this.prevTouchX,n=s-this.prevToucnY;this.rotate(2*i,2*n),this.prevTouchX=e,this.prevToucnY=s}),this.interface.addEventListener("click",t=>{t.stopPropagation()}),this.interface.getElementsByClassName("point-pack-toggle-user-interface")[0].addEventListener("click",()=>{this.isInterfaceOpen=!this.isInterfaceOpen,this.interface.querySelectorAll(".pkui-display")[0].style.display=this.isInterfaceOpen?"block":"none"}),this.interface.querySelectorAll(".pkui-submit")[0].addEventListener("click",t=>{t.preventDefault(),window.cancelAnimationFrame(this.frame);const e=this.interface.querySelectorAll(".pkui-points")[0].value,s=this.interface.querySelectorAll(".pkui-iterations")[0].value;Number.isNaN(+e)||Number.isNaN(+s)||(this.interface.querySelectorAll(".pkui-submit")[0].disabled=!0,this.n=+e,this.iterations=+s,this.options.pointSize=5,this.options.edgeWidth=5,setTimeout(()=>{this.start(!this.interface.querySelectorAll(".pkui-render-steps")[0].checked),this.interface.querySelectorAll(".pkui-submit")[0].disabled=!1},10))})});o(this,"rotate",(t,e)=>{this.nodes.forEach(s=>{const{x:i,y:n,z:c}=this.calculateRotatedCoordinates(s.x,s.y,s.z,t,e,0,.002);s.x=i,s.y=n,s.z=c}),this.render()});if(e.length<5)throw new Error("id must be at least five characters");this.n=12,this.iterations=1e4,t.innerHTML=t.innerHTML+`
      <div class="point-pack-container" id="${e}">
        <canvas class="point-pack-canvas" id="${e}-canvas"></canvas>
        <div class="point-pack-user-interface-container" id="${e}-interface">
          <button class="point-pack-toggle-user-interface">Show/Hide</button>
          <form class="pkui-display">
            <div>
              <p>Points:</p>
              <input class="pkui-input pkui-points" type="text" placeholder="Point count..." value="${this.n}"></input>
            </div>
            <div>
              <p>Steps:</p>
              <input class="pkui-input pkui-iterations" type="text" placeholder="Step count..." value="${this.iterations}"></input>
            </div>
            <div>
              <input class="pkui-render-steps" checked type="checkbox"></input>
              <p>Render Steps (slow)</p>
            </div>
            <div>
              <input class="pkui-submit" type="submit" value="Start"></input>
            </div>
          </form>
        </div>
      </div>
    `,this.canvas=document.querySelector("#"+e+"-canvas"),this.interface=document.querySelector("#"+e+"-interface");const s=t.clientWidth,i=t.clientHeight;this.centerX=s/2,this.centerY=i/2,this.sphereRadius=.95*(Math.min(s,i,1e3)/2),this.canvas.width=s,this.canvas.height=i,this.edgeColorCodes=new Map,this.frame=0,window.addEventListener("resize",()=>{const n=t.clientWidth,c=t.clientHeight;this.centerX=n/2,this.centerY=c/2,this.canvas.width=n,this.canvas.height=c,this.sphereRadius=.95*(Math.min(n,c,1e3)/2),this.render()}),this.ctx=this.canvas.getContext("2d"),this.mouseIsDown=!1,this.prevTouchX=0,this.prevToucnY=0,this.isInterfaceOpen=!0,this.isLoading=!1,this.options={clear:"black",pointColor:"#ffffff",backPointColor:"#ffffff55",edgeColor:"#dddddd",edgeBackColor:"#555555",pointSize:5,edgeWidth:5},this.nodes=[],this.generateEventListeners(),this.start(!1)}}new E(document.querySelector("#app"),"point-pack-1");
